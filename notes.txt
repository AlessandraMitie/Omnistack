Projeto API Rest - Omnistack 09

pasta backend: yarn init -y

arquivo package.json: contém todas as informações do projeto, bem como as dependências

RODAR O SERVIDOR:
pasta backend > terminal > executar para ver se a rota está funcionando: node src/server.js

instalar dependência:
yarn add nodemon -D

após instalar, para rodar o servidor, apenas digitar no terminal:
yarn dev

experss é um micro framework do node, facilita na criação de rotas. não entende json

métodos:
GET: usado quando quer buscar uma informação no backend
POST: usado quando quer criar uma info 
PUT: usado quando quer editar uma info 
DELETE

Nomes de rotas em inglês e no plural

req.query: acessar query params (para filtros)
req.params: acessar route params (para edição, delete)
req.body: acessar corpo da requisição (para criação, edição)

app.get('/users', (req, res) => {
    // método get
    //enviar um objeto de propriedade message e valor Hello World
    return res.json({ message: "Hello World" });

});

*** Express lê os arquivos de forma sequencial

MongoDB   omnistack/omnistack
* criar um servidor -> criar um Cluster
Precisa liberar o acesso para o Node
* criar um usuário: SECURITY > Database Access
     Read and writeto any database
* liberar acesso ao servidor: SECURITY > Nework Access > Add IP Address > Allow access from anywhere
Retornar para a aba Clusters > clicar em CONNECT > Connect Your Application > "DRIVER" selecionar Node.js > "VERSION" pegar a versão mais recente (caso nao conecte, pegar a 2a mais recente)
Copiar a url de connection string
voltar ao terminal e rodar o comando:
yarn add mongoose
colar o caminho (ver mongoose.connect no arquivo server.js)

Mongoose é uma biblioteca que vai facilitar o trabalho com os dados do MongoDB


Model
inicia com letra maiúscula e no singular

Insomnia -> adicionar Environments:
na url de POST, recortar http://localhost:3333
Menu > No Environment > Manage Environments. Em Base Environment, colar a url e salvar:
{
  "base_url": "http://localhost:3333"
}
na url de POST, antes da /, procurar por base, deverá carregar a base_url

yarn add multer
é uma lib





video 20191006 142830
33min


FRONT END
em um terminal, deixar rodando o comando yarn dev dentro da pasta backend


pelo terminal do vscode, acessar a pasta frontend
rodar o comando yarn start
dentro da pasta public, apagar os arquivos e deixar somente o index.html

começar video 20191006_161657

pasta src -> deletar os arquivos: serviceworker, logo, index.css e app.test.js

componente é uma função que retorna html

jsx -> js + xml (sintaxe do html)